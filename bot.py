# bot.py ‚Äî –ø–æ–≤–Ω–∏–π —Ä–æ–±–æ—á–∏–π –∫–æ–¥ –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º–∏

import logging
from datetime import datetime
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes,
)
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# --------------------------
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# --------------------------
TOKEN = "8321988283:AAHaMPgWW68Ktmek1WAdTeZjeLMJquT0IUk"
SPREADSHEET_ID = "1lJc616p6Mx0QBAXexmBJxYX9cte8cSBANJQNaR2V12w"
SERVICE_ACCOUNT_FILE = "teak-alloy-475620-q5-75d9468a5b71.json"
ADMIN_CHAT_ID = 460841825  # <- —Ç–≤—ñ–π chat_id

# --------------------------
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive",
]
credentials = ServiceAccountCredentials.from_json_keyfile_name(SERVICE_ACCOUNT_FILE, scope)
gc = gspread.authorize(credentials)
SPREADSHEET = gc.open_by_key(SPREADSHEET_ID)

# –ê—Ä–∫—É—à—ñ
SHEET_PRAYER = SPREADSHEET.sheet1
try:
    SHEET_OTHERS = SPREADSHEET.get_worksheet(1)
except Exception:
    SHEET_OTHERS = SPREADSHEET.add_worksheet(title="–ú–æ–ª–∏—Ç–≤–∞ –∑–∞ —ñ–Ω—à–∏—Ö", rows="100", cols="10")
    SHEET_OTHERS.append_row(["–î–∞—Ç–∞", "–Ü–º'—è", "–ú–æ–ª–∏—Ç–≤–∞", "–ü–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ—Å—Ç—å", "–¢–µ–ª–µ—Ñ–æ–Ω"])
try:
    SHEET_KVL = SPREADSHEET.get_worksheet(2)
except Exception:
    SHEET_KVL = SPREADSHEET.add_worksheet(title="–ö–í–õ", rows="100", cols="5")
    SHEET_KVL.append_row(["–î–∞—Ç–∞ —ñ —á–∞—Å", "–Ü–º'—è —Ç–∞ –ü—Ä—ñ–∑–≤–∏—â–µ", "–ú—ñ—Å—Ç–æ", "–û–±–ª–∞—Å—Ç—å", "–¢–µ–ª–µ—Ñ–æ–Ω"])

# --------------------------
def main_keyboard():
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üôè –ó–∞–ª–∏—à–∏—Ç–∏ –Ω–∞–º—ñ—Ä–µ–Ω–Ω—è", callback_data="pray_request")],
            [InlineKeyboardButton("‚úùÔ∏è –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ –º–æ–ª–∏—Ç–≤–∏", callback_data="pray_for_others")],
            [InlineKeyboardButton("üõ°Ô∏è –ë—ñ–ª—å—à–µ –ø—Ä–æ –ö—Ä—É—Ü—ñ—è—Ç—É –í–∏–∑–≤–æ–ª–µ–Ω–Ω—è –õ—é–¥–∏–Ω–∏", callback_data="crusade")],
        ]
    )


# --------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–°–ª–∞–≤–∞ –Ü—Å—É—Å—É –•—Ä–∏—Å—Ç—É!\n\n"
        "–¶–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –º–æ–ª–∏—Ç–æ–≤–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏ –ö—Ä—É—Ü—ñ—è—Ç–∏ –í–∏–∑–≤–æ–ª–µ–Ω–Ω—è –õ—é–¥–∏–Ω–∏\n üî•–°–º–æ–ª–æ—Å–∫–∏–ø–∏ –ì–µ–¥–µ–æ–Ω–∞üî•\n\n"
        "–¢—É—Ç –í–∏ –º–æ–∂–µ—Ç–µ:\n"
        "üôè –ó–∞–ª–∏—à–∏—Ç–∏ –Ω–∞–º—ñ—Ä–µ–Ω–Ω—è –∑–∞ –ó–í–Ü–õ–¨–ù–ï–ù–ù–Ø –õ–Æ–î–ò–ù–ò –Ü–ó –ó–ê–õ–ï–ñ–ù–û–°–¢–Ü\n"
        "‚úùÔ∏è –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ –º–æ–ª–∏—Ç–≤–∏ –∑–∞ –∑–∞–ª–µ–∂–Ω–∏—Ö –æ—Å—ñ–±\n"
        "üõ°Ô∏è –î—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –ö—Ä—É—Ü—ñ—è—Ç—É –í–∏–∑–≤–æ–ª–µ–Ω–Ω—è –õ—é–¥–∏–Ω–∏\n\n"
        "–¢–æ–∂, —Ä–æ–∑–ø–æ—á–Ω—ñ–º–æ!",
        reply_markup=main_keyboard(),
    )


# --------------------------
# –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ
async def periodicity_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data  # 'daily' / 'weekly' / 'monthly'

    mapping = {"daily": "–©–æ–¥–Ω—è", "weekly": "–©–æ—Ç–∏–∂–Ω—è", "monthly": "–©–æ–º—ñ—Å—è—Ü—è"}
    context.user_data["periodicity"] = mapping.get(data, data)
    # –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫ ‚Äî –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–ª–µ—Ñ–æ–Ω—É
    context.user_data["step_others"] = 4

    await query.message.reply_text(
        "–î—è–∫—É—î–º–æ! üôè\n–Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ, –∑–∞–ª–∏—à—Ç–µ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∑–≤‚Äô—è–∑–∫—É (–∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å ¬´‚Äì¬ª, —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏):"
    )


# --------------------------
# –ó–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –º–µ–Ω—é / callback-—ñ–≤
async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    # –ù–µ —á–∏—Å—Ç–∏–º–æ user_data —Ç—É—Ç ‚Äî —Å—Ç–∞–Ω –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å –ø–æ–∫—Ä–æ–∫–æ–≤–æ—ó –≤–∑–∞—î–º–æ–¥—ñ—ó.
    # –ß–∏—Å—Ç–∏–º–æ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–±–æ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Å—Ü–µ–Ω–∞—Ä—ñ—é.

    if data == "pray_request":
        context.user_data.clear()
        context.user_data["step"] = 1
        await query.message.reply_text(
            "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è (–∑–∞ –±–∞–∂–∞–Ω–Ω—è–º –ø—Ä—ñ–∑–≤–∏—â–µ) –ª—é–¥–∏–Ω–∏, –∑–∞ —è–∫—É –í–∏ –ø—Ä–æ—Å–∏—Ç–µ –ø–æ–º–æ–ª–∏—Ç–∏—Å—å —É –Ω–∞–º—ñ—Ä—ñ: –ó–ê –ó–í–Ü–õ–¨–ù–ï–ù–ù–Ø –Ü–ó –ó–ê–õ–ï–ñ–ù–û–°–¢–Ü",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="back_to_start")]]),
        )
        return

    if data == "pray_for_others":
        context.user_data.clear()
        context.user_data["step_others"] = 1
        await query.message.reply_text(
            "–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —Å–≤–æ—î —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ üôè\n(–í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —ñ–º‚Äô—è, —è–∫—â–æ –±–∞–∂–∞—î—Ç–µ)",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="back_to_start")]]),
        )
        return

    if data == "crusade":
        # —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è + –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å
        await query.message.reply_text(
            "üõ°Ô∏è–©–æ —Ç–∞–∫–µ –ö—Ä—É—Ü—ñ—è—Ç–∞ –í–∏–∑–≤–æ–ª–µ–Ω–Ω—è –õ—é–¥–∏–Ω–∏?\n\n"
"–ö–í–õ - —Ü–µ –ø—Ä–æ–≥—Ä–∞–º–∞ –¥—ñ–π, –º–µ—Ç–æ—é —è–∫–æ—ó —î –ø–æ–¥–æ–ª–∞–Ω–Ω—è –≤—Å—å–æ–≥–æ, —â–æ –∑–∞–≥—Ä–æ–∂—É—î –≥—ñ–¥–Ω–æ—Å—Ç—ñ –æ—Å–æ–±–∏ —Ç–∞ –ø—Ä–∏–Ω–∏–∂—É—î –∑–¥–æ—Ä–æ–≤—ñ —Å—É—Å–ø—ñ–ª—å–Ω—ñ –∑–≤–∏—á–∞—ó. \n"
"–¢–æ–º—É –ö–í–õ –ø—Ä–æ–ø–∞–≥—É—î —Å—Ç–∏–ª—å –∂–∏—Ç—Ç—è, —â–æ —Å–ø–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ –ø—Ä–∞–≤–¥—É, –ª—é–±–æ–≤ —ñ —Å–≤–æ–±–æ–¥—É. –î–æ —É—á–∞—Å—Ç—ñ –≤ –ö—Ä—É—Ü—ñ—è—Ç—ñ –º–∏ –∑–∞–ø—Ä–æ—à—É—î–º–æ –∫–æ–∂–Ω—É –ª—é–¥–∏–Ω—É –¥–æ–±—Ä–æ—ó –≤–æ–ª—ñ.\n"
"–ö—Ä—É—Ü—ñ—è—Ç–∞ –í–∏–∑–≤–æ–ª–µ–Ω–Ω—è –õ—é–¥–∏–Ω–∏ - —Ü–µ —Å–ª—É–∂—ñ–Ω–Ω—è –∑–∞—Ä–∞–¥–∏ –≤–∏–∑–≤–æ–ª–µ–Ω–Ω—è –≤—ñ–¥ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, –ø–æ—à–∏—Ä–µ–Ω–∏—Ö –≤ —Å—É—Å–ø—ñ–ª—å—Å—Ç–≤—ñ, –∞–ª–∫–æ–≥–æ–ª—ñ–∑–º—É, —Ç–∞ —É—Å—è–∫–æ—ó –æ–º–∞–Ω–∏ —ñ —Å—Ç—Ä–∞—Ö—É, –æ—Å–æ–±–ª–∏–≤–æ —è–∫—ñ –Ω–∏—â–∞—Ç—å –ª—é–¥—Å—å–∫—É –≥—ñ–¥–Ω—ñ—Å—Ç—å —ñ –Ω–µ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ª—é–¥–∏–Ω—ñ —Å–∞–º–æ—Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏—Å—è –∑–≥—ñ–¥–Ω–æ –∑—ñ —Å–≤–æ—ó–º –ø–æ–∫–ª–∏–∫–∞–Ω–Ω—è–º.\n\n"
            "–î–æ–¥–∞—Ç–∫–æ–≤–æ:\n"
            "üîπ Facebook: https://www.facebook.com/groups/253007735269596/\n"
            "üîπ –°–∞–π—Ç –†—É—Ö—É –°–≤—ñ—Ç–ª–æ-–ñ–∏—Ç—Ç—è: https://oazaukraina.blogspot.com/2010/10/blog-post_5048.html\n"
            "üîπ –í—ñ–∫—ñ–ø–µ–¥—ñ—è: https://uk.wikipedia.org/wiki/–ö—Ä—É—Ü—ñ—è—Ç–∞_–≤–∏–∑–≤–æ–ª–µ–Ω–Ω—è_–ª—é–¥–∏–Ω–∏\n\n"
            "–Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ –ö–í–õ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ üëá",
            reply_markup=InlineKeyboardMarkup(
                [
                    [InlineKeyboardButton("–í–∏—è–≤–ª—è—é –±–∞–∂–∞–Ω–Ω—è –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ –ö–í–õ", callback_data="join_kvl")],
                    [InlineKeyboardButton("üîô –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="back_to_start")],
                ]
            ),
        )
        return

    if data == "back_to_start":
        context.user_data.clear()
        await query.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=main_keyboard())
        return

    if data == "join_kvl":
        context.user_data.clear()
        context.user_data["kvl_step"] = 1
        await query.message.reply_text(
            "–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —ñ–º‚Äô—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ üôè",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="back_to_start")]]),
        )
        return

    # –Ø–∫—â–æ callback –Ω–µ –≤–ø—ñ–∑–Ω–∞–Ω–æ ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ (–∞–±–æ –ª–æ–≥)
    logger.info(f"Unprocessed callback data: {data}")


# --------------------------
# –û–±—Ä–æ–±–ª—è—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–≤—Å—ñ –∫—Ä–æ–∫–∏)
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # --- –ü—Ä–æ—à—É –ø—Ä–æ –º–æ–ª–∏—Ç–≤—É ---
    if context.user_data.get("step") == 1:
        SHEET_PRAYER.append_row([timestamp, text])
        await update.message.reply_text(
            "–î—è–∫—É—î–º–æ! –í–∞—à–µ –ø—Ä–æ—Ö–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ. –ù–µ—Ö–∞–π –ë–æ–≥ –í–∞–º –±–ª–∞–≥–æ—Å–ª–æ–≤–∏—Ç—å üôè",
            reply_markup=main_keyboard(),
        )
        context.user_data.clear()
        return

    # --- –•–æ—á—É –º–æ–ª–∏—Ç–∏—Å—å –∑–∞ —ñ–Ω—à–∏—Ö ---
    step_others = context.user_data.get("step_others")
    if step_others:
        if step_others == 1:
            context.user_data["name"] = text
            context.user_data["step_others"] = 2
            await update.message.reply_text(
                "–î—è–∫—É—î–º–æ üëç\n–ù–∞–ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —è–∫—É –º–æ–ª–∏—Ç–≤—É –í–∏ –±–∞–∂–∞—î—Ç–µ –º–æ–ª–∏—Ç–∏—Å—è –∑–∞ —ñ–Ω—à–∏—Ö "
                "(–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: ¬´–û—Ç—á–µ –Ω–∞—à¬ª, ¬´–†–æ–∑–∞—Ä—ñ–π¬ª, ¬´–ö–æ—Ä–æ–Ω–∫–∞ –¥–æ –ë–æ–∂–æ–≥–æ –ú–∏–ª–æ—Å–µ—Ä–¥—è¬ª —Ç–æ—â–æ)."
            )
            return

        if step_others == 2:
            context.user_data["prayer"] = text
            context.user_data["step_others"] = 3
            # –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ
            await update.message.reply_text(
                "–ì–∞—Ä–Ω–æ! üôå\n–Ø–∫ —á–∞—Å—Ç–æ –í–∏ –ø–ª–∞–Ω—É—î—Ç–µ –º–æ–ª–∏—Ç–∏—Å—è?\n–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∞—Ä—ñ–∞–Ω—Ç –Ω–∏–∂—á–µ üëá",
                reply_markup=InlineKeyboardMarkup(
                    [
                        [InlineKeyboardButton("üîπ –©–æ–¥–Ω—è", callback_data="daily")],
                        [InlineKeyboardButton("üîπ –©–æ—Ç–∏–∂–Ω—è", callback_data="weekly")],
                        [InlineKeyboardButton("üîπ –©–æ–º—ñ—Å—è—Ü—è", callback_data="monthly")],
                    ]
                ),
            )
            return

        if step_others == 4:
            phone = text if text else "-"
            # –ó–∞–ø–∏—Å —É Google Sheets
            SHEET_OTHERS.append_row(
                [
                    timestamp,
                    context.user_data.get("name", "-"),
                    context.user_data.get("prayer", "-"),
                    context.user_data.get("periodicity", "-"),
                    phone,
                ]
            )
            await update.message.reply_text(
                "‚úÖ –î—è–∫—É—î–º–æ, —â–æ –∑–≥–æ–ª–æ—Å–∏–ª–∏—Å—å –º–æ–ª–∏—Ç–∏—Å—å –∑–∞ —ñ–Ω—à–∏—Ö!\n–ù–µ—Ö–∞–π –ì–æ—Å–ø–æ–¥—å —â–µ–¥—Ä–æ –±–ª–∞–≥–æ—Å–ª–æ–≤–∏—Ç—å –í–∞—Å üïäÔ∏è",
                reply_markup=main_keyboard(),
            )
            context.user_data.clear()
            return

    # --- –ö–í–õ ---
    kvl_step = context.user_data.get("kvl_step")
    if kvl_step:
        if kvl_step == 1:
            context.user_data["name"] = text
            context.user_data["kvl_step"] = 2
            await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –º—ñ—Å—Ç–æ:")
            return
        if kvl_step == 2:
            context.user_data["city"] = text
            context.user_data["kvl_step"] = 3
            await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –æ–±–ª–∞—Å—Ç—å:")
            return
        if kvl_step == 3:
            context.user_data["region"] = text
            context.user_data["kvl_step"] = 4
            await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–∞–±–æ ¬´‚Äì¬ª, —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏):")
            return
        if kvl_step == 4:
            phone = text if text else "-"
            # –ó–∞–ø–∏—Å —É Google Sheets
            SHEET_KVL.append_row(
                [timestamp, context.user_data.get("name", "-"), context.user_data.get("city", "-"),
                 context.user_data.get("region", "-"), phone]
            )

            # –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É (–±–µ–∑ –ø–∞–¥—ñ–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ)
            if ADMIN_CHAT_ID:
                try:
                    await context.bot.send_message(
                        chat_id=ADMIN_CHAT_ID,
                        text=(
                            "‚ö†Ô∏è –ù–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫ –ö–í–õ:\n"
                            f"–Ü–º‚Äô—è: {context.user_data.get('name')}\n"
                            f"–ú—ñ—Å—Ç–æ: {context.user_data.get('city')}\n"
                            f"–û–±–ª–∞—Å—Ç—å: {context.user_data.get('region')}\n"
                            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
                        ),
                    )
                except Exception as e:
                    logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

            # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            await update.message.reply_text(
                "‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –±–∞–∂–∞–Ω–Ω—è –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ –ö–í–õ!\n–ù–µ—Ö–∞–π –ì–æ—Å–ø–æ–¥—å —â–µ–¥—Ä–æ –±–ª–∞–≥–æ—Å–ª–æ–≤–∏—Ç—å –í–∞—Å üïäÔ∏è\n\n"
                "–ö–æ–Ω—Ç–∞–∫—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏—Ö –æ—Å—ñ–±:\n"
"üîπ –æ. –ü–∞–≤–ª–æ –†–æ—Å—Å–∞ +380972657312\n"
"üîπ –ë–∞—Ä–±–∞—Ä–∞ +380974656801\n"
"üîπ –î–º–∏—Ç—Ä–æ +380634287204\n\n"
                "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ö–í–õ:\n\n"
            "üîπ Facebook: https://www.facebook.com/groups/253007735269596/\n"
            "üîπ –°–∞–π—Ç –†—É—Ö—É –°–≤—ñ—Ç–ª–æ-–ñ–∏—Ç—Ç—è: https://oazaukraina.blogspot.com/2010/10/blog-post_5048.html\n"
            "üîπ –í—ñ–∫—ñ–ø–µ–¥—ñ—è: https://uk.wikipedia.org/wiki/–ö—Ä—É—Ü—ñ—è—Ç–∞_–≤–∏–∑–≤–æ–ª–µ–Ω–Ω—è_–ª—é–¥–∏–Ω–∏\n\n"
            )

            context.user_data.clear()
            return

    # –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –≤—ñ–¥–Ω–æ—Å–∏—Ç—å—Å—è –¥–æ –∂–æ–¥–Ω–æ–≥–æ –∫—Ä–æ–∫—É, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=main_keyboard())


# --------------------------
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–¥–∞—î–º–æ handler-–∏: —Å–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ—Å—Ç—å (—â–æ–± pattern —Å–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞–≤ —Ä–∞–Ω—ñ—à–µ),
    # –ø–æ—Ç—ñ–º –∑–∞–≥–∞–ª—å–Ω–∏–π menu_handler, –ø–æ—Ç—ñ–º —ñ–Ω—à—ñ.
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(periodicity_handler, pattern="^(daily|weekly|monthly)$"))
    app.add_handler(CallbackQueryHandler(menu_handler))  # –æ–±—Ä–æ–±–ª—è—î —ñ–Ω—à—ñ callback_data
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏.")
    app.run_polling()


if __name__ == "__main__":
    main()
